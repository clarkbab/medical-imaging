import numpy as np
import pandas as pd
import pydicom as dcm
import SimpleITK as sitk
import torch
from typing import *

Number = Union[int, float]
AngleDegree = Number
Axis = Literal[0, 1, 2]
AxisName = Literal['sagittal', 'coronal', 'axial']
Pixel = Tuple[int, int]
Pixels = np.ndarray
Voxel = Tuple[int, int, int]          # Required by 'Box'.
Voxels = np.ndarray
Point2D = Tuple[float, float]         # Required by 'Box'.
Point3D = Tuple[float, float, float]  # Required by 'Box'.
Point = Union[Point2D, Point3D]
Points = Union[np.ndarray, torch.Tensor]
Points2D = Points
Points3D = Points
Box2D = Tuple[Pixel, Pixel]
Box3D = Tuple[Voxel, Voxel]
Box = Union[Box2D, Box3D]
BoxMM2D = Tuple[Point2D, Point2D]
BoxMM3D = Tuple[Point3D, Point3D]
Channel = int
Channels = Union[Channel, List[Channel], Literal['all']]
Colour = Union[str, Tuple[float, float, float]]
DatasetID = str
Data = np.ndarray
DicomModality = Literal['ct', 'mr', 'rtdose', 'rtplan', 'rtstruct']
DicomModalities = Union[DicomModality, List[DicomModality], Literal['all']]
DicomSOPInstanceUID = str
DirPath = str
ImageArray = Data
ImageArrays = Union[ImageArray, List[ImageArray]]
ImageArray2D = ImageArray      # E.g. CT slices.
ImageArray3D = ImageArray      # E.g. CT/MR volumes.
CtDicom = dcm.dataset.FileDataset
CtVolume = ImageArray3D
CtVolumes = Union[CtVolume, List[CtVolume]]
CtSliceImage = ImageArray2D
DoseData = ImageArray3D
DoseDatas = Union[DoseData, List[DoseData]]
Extrema = Literal[0, 1]
FilePath = str
FilePaths = Union[FilePath, List[FilePath]]
Fov2D = BoxMM2D
Fov3D = BoxMM3D
Fov = Union[Fov2D, Fov3D]
GlobalID = str
GroupID = Union[int, float, str]
GroupIDs = Union[GroupID, List[GroupID]]
LabelData = ImageArray
LabelData3D = LabelData
Landmark = str 
Landmarks = Union[Landmark, List[Landmark], Literal['all']]
LandmarkID = str
LandmarkIDs = Union[LandmarkID, List[LandmarkID], Literal['all']]
LandmarkData = pd.Series
LandmarksData = pd.DataFrame
LandmarksDataVox = pd.DataFrame
ModelCheckpoint = Union[str, Literal['best', 'last']]
ModelID = str
ModelIDs = Union[ModelID, List[ModelID], Literal['all']]
ModelName = Tuple[str, str]
MrData = ImageArray
NiftiSeriesID = str
NiftiModality = Literal['ct', 'dose', 'mr', 'regions']
PatientID = str
PatientIDs = Union[PatientID, List[PatientID], Literal['all']]
Region = str
RegionID = str
Regions = Union[Region, List[Region], Literal['all']]
RegionIDs = Union[RegionID, List[RegionID], Literal['all']]
RegionArray = LabelData3D
RegionsData = Dict[Region, RegionArray]
RtDoseDicom = dcm.dataset.FileDataset
RtPlanDicom = dcm.dataset.FileDataset
RtStructDicom = dcm.dataset.FileDataset
SampleID = int
SampleIDs = Union[SampleID, List[SampleID], Literal['all']]
SeriesID = str
SeriesIDs = Union[SeriesID, List[SeriesID], Literal['all']]
Size2D = Tuple[int, int]
Size3D = Tuple[int, int, int]
Size = Union[Size2D, Size3D]
SizeMM2D = Tuple[float, float]
SizeMM3D = Tuple[float, float, float]
SizeMM = Union[SizeMM2D, SizeMM3D]
Spacing = Tuple[float, ...]
Spacing2D = Tuple[float, float]
Spacing3D = Tuple[float, float, float]
Split = Literal['train', 'validation', 'test']
Splits = Union[Split, List[Split], Literal['all']]
SpartanPartition = Literal['feit-gpu-a100', 'gpu-a100', 'gpu-a100-short', 'gpu-h100', 'sapphire']
SpartanPartitions = Union[SpartanPartition, List[SpartanPartition]]
StudyID = str
StudyIDs = Union[StudyID, List[StudyID], Literal['all']]
ImageTensor = torch.Tensor
ImageTensors = Union[ImageTensor, List[ImageTensor]]
ImageTensor3D = ImageTensor
TrainingInterval = str
Transform = sitk.Transform
VectorImageArray = ImageArray3D  # E.g. vector fields.
VectorImageArrays = Union[VectorImageArray, List[VectorImageArray]]
